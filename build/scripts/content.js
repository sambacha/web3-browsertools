const port=chrome.runtime.connect({name:"usedapp-content"});port.onMessage.addListener(receiveMessage),window.addEventListener("message",sendMessage),port.onDisconnect.addListener(onDisconnect);function onDisconnect(){window.removeEventListener("message",sendMessage)}const messages=[];function sendMessage(e){e.data&&e.data.source==="usedapp-hook-init"?chrome.runtime.sendMessage(e.data):e.data&&e.data.source==="usedapp-hook"&&(messages.push(e.data),port.postMessage(e.data))}function receiveMessage(e){if(e.source==="usedapp-panel"){if(e.payload==="replay"){port.postMessage({source:"usedapp-content",payload:{type:"REPLAY",messages}});return}window.postMessage({source:"usedapp-content",payload:e},"*")}}const source=";("+installHook.toString()+")()";if(document instanceof HTMLDocument){const e=document.createElement("script");e.textContent=source,document.documentElement.appendChild(e),e.parentNode.removeChild(e)}function installHook(){if(window.hasOwnProperty("__USEDAPP_DEVTOOLS_HOOK__"))return;const e={useDApp:!1,init(){this.useDApp=!0,window.postMessage({source:"usedapp-hook-init",useDAppDetected:!0}),this.send({type:"INIT"})},send(t){window.postMessage({source:"usedapp-hook",timestamp:Date.now(),payload:t})},listen(t){function s(n){n.data&&n.data.source==="usedapp-content"&&t(n.data.payload)}return window.addEventListener("message",s),()=>window.removeEventListener("message",s)}};Object.defineProperty(window,"__USEDAPP_DEVTOOLS_HOOK__",{get(){return e}})}
